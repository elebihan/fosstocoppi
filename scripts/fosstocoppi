#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# fosstocoppi - Retrieve Open Source licenses
#
# Copyright (c) 2013 Eric Le Bihan <eric.le.bihan.dev@free.fr>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import sys
import argparse
from fosstocoppi import __version__
from fosstocoppi.utils import setup_i18n, create_printer, lookhead
from fosstocoppi.collector import LicenseCollector
from gettext import gettext as _

setup_i18n()

def parse_cmd_list(args):
    with create_printer(args.output) as p:
        try:
            collector = LicenseCollector()
            licenses = collector.list_licenses()
            for alias in sorted(licenses):
                p.print("{:<32}: {}".format(alias, licenses[alias]))
        except Exception as e:
            print(_("Error: {}").format(e))
            sys.exit(1)

def parse_cmd_get(args):
    with create_printer(args.output) as p:
        try:
            collector = LicenseCollector()
            for alias, is_last in lookhead(args.licenses):
                text = collector.get_license(alias)
                p.print(text)
                if args.with_scissors and not is_last:
                    p.print('--8<--')
        except Exception as e:
            print(_("Error: {}").format(e))
            sys.exit(1)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--version',
                        action='version',
                        version=__version__)
    parser.add_argument('-o', '--output',
                        metavar=_('FILE'),
                        help=_('set output file'))

    subparsers = parser.add_subparsers()
    parser_l = subparsers.add_parser('list',
                                     help=_('list licenses'))
    parser_l.set_defaults(func=parse_cmd_list)
    parser_g = subparsers.add_parser('get',
                                     help=_('get licenses'))
    parser_g.add_argument('licenses',
                          metavar=_('LICENSE'),
                          nargs='+',
                          help=_('alias of the license to get'))
    parser_g.add_argument('-s', '--scissors',
                          action='store_true',
                          dest='with_scissors',
                          default=False,
                          help=_('add delimiter between licenses'))

    parser_g.set_defaults(func=parse_cmd_get)

    args = parser.parse_args()
    args.func(args)

# vim: ts=4 sts=4 sw=4 sta et ai
